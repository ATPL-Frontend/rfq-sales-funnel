name: Deploy to CPanel (client + backend in same root)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: "Production â€“ atpl-dhaka"

    steps:
      # 0) Checkout
      - name: Checkout
        uses: actions/checkout@v3

      # 1) Node for build steps
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # -------------------- CLIENT (React @ /) --------------------
      - name: Inject .env for Vite
        working-directory: client
        run: |
          cat > .env << 'EOF'
          VITE_API_URL=${{ secrets.VITE_API_URL }}
          EOF

      - name: Install dependencies & build (client)
        working-directory: client
        run: |
          npm ci
          npm run build

      - name: ðŸ“‚ Sync CLIENT using FTP (to root)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps
          local-dir: client/dist/         # upload built SPA
          server-dir: /                   # <-- document root of the subdomain
          timeout: 1200
          # DO NOT touch the backend directory
          exclude: |
            **/.git*
            **/.github*
            **/.DS_Store
            .htaccess
            api/**

      # -------------------- BACKEND (Node @ /api) --------------------
      - name: Inject .env for server
        working-directory: server
        run: |
          cat > .env << 'EOF'
          DB_HOST=${{ secrets.DB_HOST }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=${{ secrets.DB_PORT }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          CLIENT_URL=${{ secrets.CLIENT_URL }}
          NODE_ENV=production
          EOF
          
      - name: Install & (optionally) build server
        working-directory: server
        run: |
          if [ -f package.json ]; then
            npm ci || true
            # If you have a build step (e.g., TypeScript) uncomment:
            # npm run build || true
          fi

      # Touch restart.txt so Passenger restarts after deploy
      - name: Prepare Passenger restart trigger
        working-directory: server
        run: |
          mkdir -p tmp
          date +%s > tmp/restart.txt

      - name: ðŸ“‚ Sync BACKEND using FTP (to /api)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps
          local-dir: server/             # runtime files only
          server-dir: /api/               # <-- server lives here
          timeout: 1200
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/README.md
            **/tests/**
            **/test/**
            **/.DS_Store
            **/.vscode/**
            **/.idea/**
